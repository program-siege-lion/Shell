字符串的三种形式：
  1) 由单引号' '包围的字符串：
  任何字符都会原样输出，在其中使用变量是无效的。
  字符串中不能出现单引号，即使对单引号进行转义也不行。

  2) 由双引号" "包围的字符串：
  如果其中包含了某个变量，那么该变量会被解析（得到该变量的值），而不是原样输出。
  字符串中可以出现双引号，只要它被转义了就行。

  3) 不被引号包围的字符串
  不被引号包围的字符串中出现变量时也会被解析，这一点和双引号" "包围的字符串一样。
  字符串中不能出现空格，否则空格后边的字符串会作为其他变量或者命令解析。
  
  获取字符串长度演示：
    #!/bin/bash
    str="adfjadfalfasklfasgas"
    echo ${#str}
    
shell> echo $?

# 字符串拼接
  name="Shell"
  url="http://c.biancheng.net/shell/"
  str1=$name$url  #中间不能有空格
  str2="$name $url"  #如果被双引号包围，那么中间可以有空格
  str3=$name": "$url  #中间可以出现别的字符串
  str4="$name: $url"  #这样写也可以
  str5="${name}Script: ${url}index.html"  #这个时候需要给变量名加上大括号

字符串截取
  ${string: start :length}	从 string 字符串的左边第 start 个字符开始，向右截取 length 个字符。
  ${string: start}	从 string 字符串的左边第 start 个字符开始截取，直到最后。
  ${string: 0-start :length}	从 string 字符串的右边第 start 个字符开始，向右截取 length 个字符。
  ${string: 0-start}	从 string 字符串的右边第 start 个字符开始截取，直到最后。
  ${string#*chars}	从 string 字符串第一次出现 *chars 的位置开始，截取 *chars 右边的所有字符。
  ${string##*chars}	从 string 字符串最后一次出现 *chars 的位置开始，截取 *chars 右边的所有字符。
  ${string%*chars}	从 string 字符串第一次出现 *chars 的位置开始，截取 *chars 左边的所有字符。
  ${string%%*chars}	从 string 字符串最后一次出现 *chars 的位置开始，截取 *chars 左边的所有字符。



